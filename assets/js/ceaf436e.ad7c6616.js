"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[286],{3191:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var a=o(4848),s=o(8453);const t={},r="Usage",i={id:"usage",title:"Usage",description:"To use it, just annotate your case class with @moka:",source:"@site/../moka-docs/target/mdoc/usage.md",sourceDirName:".",slug:"/usage",permalink:"/moka/usage",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Moka Macro",permalink:"/moka/"}},c={},l=[{value:"Companion object",id:"companion-object",level:2},{value:"Override the default name",id:"override-the-default-name",level:2},{value:"Bson",id:"bson",level:2},{value:"For standard mongodb",id:"for-standard-mongodb",level:3},{value:"For zio-bson",id:"for-zio-bson",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"usage",children:"Usage"})}),"\n",(0,a.jsxs)(n.p,{children:["To use it, just annotate your case class with ",(0,a.jsx)(n.code,{children:"@moka"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import io.moka.Moka.moka\n\n@moka\ncase class Simple(color: String)\n\nSimple.Fields.color == "color"\n// res0: Boolean = true\n'})}),"\n",(0,a.jsxs)(n.p,{children:["At compile time, the ",(0,a.jsx)(n.code,{children:"Fields"})," object is created inside the companion object."]}),"\n",(0,a.jsx)(n.p,{children:"Look at the tests to check all the supported use cases."}),"\n",(0,a.jsx)(n.h2,{id:"companion-object",children:"Companion object"}),"\n",(0,a.jsx)(n.p,{children:"Defining a companion object is supported and should not interfere"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'@moka\ncase class WithCompanion(a: Int)\nobject WithCompanion\n\nWithCompanion.Fields.a == "a"\n// res1: Boolean = true\n'})}),"\n",(0,a.jsx)(n.h2,{id:"override-the-default-name",children:"Override the default name"}),"\n",(0,a.jsxs)(n.p,{children:["The default name for the generated object is ",(0,a.jsx)(n.code,{children:"Fields"}),".\nIf you want to change it, pass the name to the annotation:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'@moka("Params")\nfinal case class RenamedField(a: Int)\nRenamedField.Params.a == "a"\n// res2: Boolean = true\n'})}),"\n",(0,a.jsx)(n.h2,{id:"bson",children:"Bson"}),"\n",(0,a.jsxs)(n.p,{children:["As the main focus is to support mongoDB queries, it's common to rename a field in the bson representation.\nFor the annotated parameter, this macro creates a ",(0,a.jsx)(n.code,{children:"val"})," as the field name, but with the annotated name as value:"]}),"\n",(0,a.jsx)(n.h3,{id:"for-standard-mongodb",children:"For standard mongodb"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import org.mongodb.scala.bson.annotations.BsonProperty\n@moka\ncase class MongodbJava(@BsonProperty("c") color: Int)\nMongodbJava.Fields.color == "c"\n// res3: Boolean = true\n'})}),"\n",(0,a.jsx)(n.h3,{id:"for-zio-bson",children:"For zio-bson"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import zio.bson.bsonField\n@moka\ncase class ZioBsonSupport(@bsonField("c") color: Int)\nZioBsonSupport.Fields.color == "c"\n// res4: Boolean = true\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var a=o(6540);const s={},t=a.createContext(s);function r(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);